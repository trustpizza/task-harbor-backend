......F..FFF.FFFF.F.

Failures:

  1) Project associations has many project_field_values
     Failure/Error: expect(project.project_field_values.count).to eq(1)

       expected: 1
            got: 0

       (compared using ==)
     # ./spec/models/projects_spec.rb:45:in `block (3 levels) in <top (required)>'

  2) Projects API GET /api/projects returns all projects
     Failure/Error: expect(response).to have_http_status(200)
       expected the response to have status code 200 but it was 404
     # ./spec/models/projects_spec.rb:79:in `block (3 levels) in <top (required)>'

  3) Projects API GET /api/projects returns an empty array if no projects exist
     Failure/Error: expect(response).to have_http_status(200)
       expected the response to have status code 200 but it was 404
     # ./spec/models/projects_spec.rb:96:in `block (3 levels) in <top (required)>'

  4) Projects API GET /api/projects/:id returns a specific project
     Failure/Error: expect(response).to have_http_status(200)
       expected the response to have status code 200 but it was 404
     # ./spec/models/projects_spec.rb:107:in `block (3 levels) in <top (required)>'

  5) Projects API POST /api/projects creates a new project
     Failure/Error:
       expect {
         post "/api/projects", params: { project: valid_attributes }.to_json, headers: { 'Content-Type': 'application/json' }
       }.to change(Project, :count).by(1)

       expected `Project.count` to have changed by 1, but was changed by 0
     # ./spec/models/projects_spec.rb:126:in `block (3 levels) in <top (required)>'

  6) Projects API POST /api/projects returns an error if the project is invalid
     Failure/Error: expect(response).to have_http_status(422)
       expected the response to have status code 422 but it was 404
     # ./spec/models/projects_spec.rb:141:in `block (3 levels) in <top (required)>'

  7) Projects API PATCH /api/projects/:id updates a project
     Failure/Error: expect(response).to have_http_status(200)
       expected the response to have status code 200 but it was 404
     # ./spec/models/projects_spec.rb:152:in `block (3 levels) in <top (required)>'

  8) Projects API PATCH /api/projects/:id returns an error if the project is invalid
     Failure/Error: expect(response).to have_http_status(422)
       expected the response to have status code 422 but it was 404
     # ./spec/models/projects_spec.rb:159:in `block (3 levels) in <top (required)>'

  9) Projects API DELETE /api/projects/:id deletes a project
     Failure/Error:
       expect {
         delete "/api/projects/#{project.id}"
       }.to change(Project, :count).by(-1)

       expected `Project.count` to have changed by -1, but was changed by 0
     # ./spec/models/projects_spec.rb:174:in `block (3 levels) in <top (required)>'

Finished in 1.07 seconds (files took 0.76237 seconds to load)
20 examples, 9 failures

Failed examples:

rspec ./spec/models/projects_spec.rb:42 # Project associations has many project_field_values
rspec ./spec/models/projects_spec.rb:76 # Projects API GET /api/projects returns all projects
rspec ./spec/models/projects_spec.rb:94 # Projects API GET /api/projects returns an empty array if no projects exist
rspec ./spec/models/projects_spec.rb:105 # Projects API GET /api/projects/:id returns a specific project
rspec ./spec/models/projects_spec.rb:123 # Projects API POST /api/projects creates a new project
rspec ./spec/models/projects_spec.rb:137 # Projects API POST /api/projects returns an error if the project is invalid
rspec ./spec/models/projects_spec.rb:150 # Projects API PATCH /api/projects/:id updates a project
rspec ./spec/models/projects_spec.rb:157 # Projects API PATCH /api/projects/:id returns an error if the project is invalid
rspec ./spec/models/projects_spec.rb:173 # Projects API DELETE /api/projects/:id deletes a project

