FFFFF

Failures:

  1) ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
     Failure/Error: project = create(:project)

     KeyError:
       Factory not registered: "project"
     # ./spec/models/project_field_value_spec.rb:8:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # KeyError:
     #   key not found: "project"
     #   ./spec/models/project_field_value_spec.rb:8:in `block (3 levels) in <top (required)>'

  2) ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
     Failure/Error: project = create(:project)

     KeyError:
       Factory not registered: "project"
     # ./spec/models/project_field_value_spec.rb:34:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # KeyError:
     #   key not found: "project"
     #   ./spec/models/project_field_value_spec.rb:34:in `block (3 levels) in <top (required)>'

  3) ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
     Failure/Error: project = create(:project)

     KeyError:
       Factory not registered: "project"
     # ./spec/models/project_field_value_spec.rb:46:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # KeyError:
     #   key not found: "project"
     #   ./spec/models/project_field_value_spec.rb:46:in `block (3 levels) in <top (required)>'

  4) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
     Failure/Error: project = create(:project)

     KeyError:
       Factory not registered: "project"
     # ./spec/models/project_field_value_spec.rb:57:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # KeyError:
     #   key not found: "project"
     #   ./spec/models/project_field_value_spec.rb:57:in `block (3 levels) in <top (required)>'

  5) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed
     Failure/Error: project = create(:project)

     KeyError:
       Factory not registered: "project"
     # ./spec/models/project_field_value_spec.rb:69:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # KeyError:
     #   key not found: "project"
     #   ./spec/models/project_field_value_spec.rb:69:in `block (3 levels) in <top (required)>'

Finished in 0.03508 seconds (files took 0.67293 seconds to load)
5 examples, 5 failures

Failed examples:

rspec ./spec/models/project_field_value_spec.rb:7 # ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
rspec ./spec/models/project_field_value_spec.rb:33 # ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
rspec ./spec/models/project_field_value_spec.rb:45 # ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
rspec ./spec/models/project_field_value_spec.rb:56 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
rspec ./spec/models/project_field_value_spec.rb:68 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed

FFFFF

Failures:

  1) ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:8:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  2) ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:34:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  3) ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:46:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  4) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:57:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  5) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:69:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

Finished in 0.04185 seconds (files took 0.82825 seconds to load)
5 examples, 5 failures

Failed examples:

rspec ./spec/models/project_field_value_spec.rb:7 # ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
rspec ./spec/models/project_field_value_spec.rb:33 # ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
rspec ./spec/models/project_field_value_spec.rb:45 # ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
rspec ./spec/models/project_field_value_spec.rb:56 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
rspec ./spec/models/project_field_value_spec.rb:68 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed

FFFFF

Failures:

  1) ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:8:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  2) ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:34:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  3) ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:46:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  4) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:57:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

  5) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed
     Failure/Error: validates :due_date, date: { after_or_equal_to: Date.today, allow_blank: true } # Due date must be in the future (or today), allows blanks

     ArgumentError:
       Unknown validator: 'DateValidator'
     # ./app/models/project.rb:7:in `<class:Project>'
     # ./app/models/project.rb:1:in `<main>'
     # ./spec/models/project_field_value_spec.rb:69:in `block (3 levels) in <top (required)>'
     # ------------------
     # --- Caused by: ---
     # NameError:
     #   uninitialized constant Project::DateValidator
     #   ./app/models/project.rb:7:in `<class:Project>'

Finished in 0.03794 seconds (files took 0.89956 seconds to load)
5 examples, 5 failures

Failed examples:

rspec ./spec/models/project_field_value_spec.rb:7 # ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
rspec ./spec/models/project_field_value_spec.rb:33 # ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
rspec ./spec/models/project_field_value_spec.rb:45 # ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
rspec ./spec/models/project_field_value_spec.rb:56 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
rspec ./spec/models/project_field_value_spec.rb:68 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed

FFFFF

Failures:

  1) ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:8:in `block (3 levels) in <top (required)>'

  2) ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:34:in `block (3 levels) in <top (required)>'

  3) ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:46:in `block (3 levels) in <top (required)>'

  4) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:57:in `block (3 levels) in <top (required)>'

  5) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:69:in `block (3 levels) in <top (required)>'

Finished in 0.05219 seconds (files took 0.92619 seconds to load)
5 examples, 5 failures

Failed examples:

rspec ./spec/models/project_field_value_spec.rb:7 # ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
rspec ./spec/models/project_field_value_spec.rb:33 # ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
rspec ./spec/models/project_field_value_spec.rb:45 # ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
rspec ./spec/models/project_field_value_spec.rb:56 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
rspec ./spec/models/project_field_value_spec.rb:68 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed

FFFFF

Failures:

  1) ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:8:in `block (3 levels) in <top (required)>'

  2) ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:34:in `block (3 levels) in <top (required)>'

  3) ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:46:in `block (3 levels) in <top (required)>'

  4) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:57:in `block (3 levels) in <top (required)>'

  5) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:69:in `block (3 levels) in <top (required)>'

Finished in 0.05792 seconds (files took 0.94468 seconds to load)
5 examples, 5 failures

Failed examples:

rspec ./spec/models/project_field_value_spec.rb:7 # ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
rspec ./spec/models/project_field_value_spec.rb:33 # ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
rspec ./spec/models/project_field_value_spec.rb:45 # ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
rspec ./spec/models/project_field_value_spec.rb:56 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
rspec ./spec/models/project_field_value_spec.rb:68 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed

FFFFF

Failures:

  1) ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:8:in `block (3 levels) in <top (required)>'

  2) ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:34:in `block (3 levels) in <top (required)>'

  3) ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:46:in `block (3 levels) in <top (required)>'

  4) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:57:in `block (3 levels) in <top (required)>'

  5) ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed
     Failure/Error: name { Faker::Project.name }

     NameError:
       uninitialized constant Faker::Project
     # ./spec/factories/projects.rb:3:in `block (3 levels) in <main>'
     # ./spec/models/project_field_value_spec.rb:69:in `block (3 levels) in <top (required)>'

Finished in 0.04676 seconds (files took 0.75708 seconds to load)
5 examples, 5 failures

Failed examples:

rspec ./spec/models/project_field_value_spec.rb:7 # ProjectFieldValue integration with Project and ProjectFieldDefinition creates a project_field_value and associates it with a project and field definition
rspec ./spec/models/project_field_value_spec.rb:33 # ProjectFieldValue integration with Project and ProjectFieldDefinition updates a project_field_value
rspec ./spec/models/project_field_value_spec.rb:45 # ProjectFieldValue integration with Project and ProjectFieldDefinition deletes a project_field_value
rspec ./spec/models/project_field_value_spec.rb:56 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project is destroyed
rspec ./spec/models/project_field_value_spec.rb:68 # ProjectFieldValue integration with Project and ProjectFieldDefinition cascades delete project_field_values when associated project_field_definition is destroyed

